(()=>{var e={203:(e,t,s)=>{const{Pool:r}=s(77),{unsignedInt:o}=s(325),n=new r({host:process.env.DB_CONFIG_HOST,user:process.env.DB_CONFIG_USER,password:process.env.DB_CONFIG_PASS,database:process.env.DB_CONFIG_NAME});e.exports=class{isConnected=!1;establishConnection=async()=>{this.client=await n.connect(),this.isConnected=!0};closeConnection=()=>{this.isConnected&&(this.client.release(),this.isConnected=!1)};getCloudByGuid=async function(e){try{const t=await this.client.query("\n          SELECT sheet_id, sheet_guid, sheet_privacy, sheet_description, user_id, sheet_config\n          FROM drive.sheets\n          WHERE sheet_guid=$1 AND sheet_status=1\n        ",[e]);return 1===t.rowCount?t.rows[0]:null}catch(e){if(e.message.startsWith("invalid input syntax for type uuid"))throw new Error("Invalid sheet guid");throw new Error(e)}};getSpreadsheetName=async function(e){try{const t=await this.client.query("\n          SELECT sheet_description\n          FROM drive.sheets\n          WHERE sheet_guid=$1 AND sheet_status=1\n        ",[e]);return 1===t.rowCount?t.rows[0].sheet_description:null}catch(e){if(e.message.startsWith("invalid input syntax for type uuid"))throw new Error("Invalid sheet guid");throw new Error(e)}};getSuperficialCloudInformationByGuid=async function(e){try{const t=await this.client.query("\n          SELECT sheet_id, sheet_guid, sheet_privacy, sheet_description, sheet_created, sheet_updated\n          FROM drive.sheets\n          WHERE sheet_guid=$1 AND sheet_status=1\n        ",[e]);return 1===t.rowCount?t.rows[0]:null}catch(e){if(e.message.startsWith("invalid input syntax for type uuid"))throw new Error("Invalid sheet guid");throw new Error(e)}};setConfig=async function(e,t){try{return 1===(await this.client.query("UPDATE drive.sheets SET sheet_config=$1, sheet_updated=NOW(), sheet_changed=1 WHERE sheet_guid=$2",[JSON.stringify(t),e])).rowCount}catch(e){return!1}};getValueFromCoords=async function(e,t,s){return(await this.client.query(`SELECT data_x[$1] FROM sheets.data_${e.replace(/-/g,"")} WHERE data_y=$2`,[t,s])).rows[0]?.data_x??""};insert=async function(e,t){let s=`INSERT INTO ${e}(`,r=") VALUES(";const o=[];return Object.entries(t).forEach((([e,t],n)=>{0!==n&&(s+=", ",r+=", "),s+=e,r+="$"+(n+1),o.push(t)})),this.client.query(s+r+")",o)};update=async function(e,t,s){let r=`UPDATE ${e} SET `,o=" WHERE ";const n=[];return Object.entries(t).forEach((([e,t],s)=>{0!==s&&(r+=", "),r+=e+"=$"+(n.length+1),n.push(t)})),Object.entries(s).forEach((([e,t],s)=>{0!==s&&(o+=" AND "),o+=e+"=$"+(n.length+1),n.push(t)})),this.client.query(r+o,n)};updateAll=function(e,t){let s=`UPDATE sheets.data_${e.replace(/-/g,"")} SET `;return Object.entries(t).forEach((([e,t],r)=>{0!==r&&(s+=", "),s+=e+"="+t})),this.client.query(s)};upsert=async function(e,t){const s=await this.client.query(`SELECT id FROM sheets.data_${e.replace(/-/g,"")} WHERE data_y = $1`,[parseInt(t.data_y)]);if(s.rows.length>0){if(0===(await this.update(`sheets.data_${e.replace(/-/g,"")}`,t,{id:parseInt(s.rows[0].id)})).rowCount)throw new Error("Something went wrong")}else await this.insert(`sheets.data_${e.replace(/-/g,"")}`,t)};setDate=async function(e,t=!0){let s;return s=t?await this.client.query("UPDATE drive.sheets SET sheet_updated=NOW(), sheet_changed=1 WHERE sheet_guid=$1",[e]):await this.client.query("UPDATE drive.sheets SET sheet_changed=0 WHERE sheet_guid=$1",[e]),s.rows.length>0};getData=async function(e,t,s){return(await this.client.query(`SELECT ${t.join(",")} FROM sheets.data_${e.replace(/-/g,"")} ORDER BY data_y`)).rows.map((e=>{const{id:t,data_y:r,...n}=e,i=Object.keys(n).length;let a={};for(let e=0;e<i;e++)a[s&&s[e]||e]=n[`c${e}`]||"";let h=Object.keys(a);if(h.every((e=>o.test(e)))){h=h.map((e=>parseInt(e)));const e=Math.max(...h);let t=!0;for(let s=0;s<=e;s++)if("string"!=typeof a[s]){t=!1;break}if(t){const t=[];for(let s=0;s<=e;s++)t.push(a[s]);a=t}}return{id:t,row:r,data:a}}))};getValue=async function(e,t,s){const r=t.map((e=>`data_x[${e}] as data_x${e}`));return(await this.client.query(`\n        SELECT data_y, ${r.join(",")}\n        FROM sheets.data_${e.replace(/-/g,"")}\n        WHERE data_y IN (${s.join(",")})\n        ORDER BY data_y\n      `)).rows.map((e=>{const{data_y:t,...s}=e;return{row:t,data:Object.entries(s).sort(((e,t)=>parseInt(e.slice(6))-parseInt(t.slice(6)))).map((e=>e[1]||""))}}))};rearrange=async function(e,t,s,r,o="+"){await this.client.query(`\n        UPDATE sheets.data_${e.replace(/-/g,"")}\n        SET data_y = data_y ${o} ${t}\n        WHERE data_y ${r} ${s}\n      `)};complexRearrange=async function(e,t,s){const r=t.map(((e,s)=>s===t.length-1&&1===e.length?`ELSE ${e[0]}`:`WHEN ${e[0]} THEN ${e[1]}`));await this.client.query(`\n        UPDATE sheets.data_${e.replace(/-/g,"")}\n        SET data_y = CASE ${r.join(" ")} END\n        WHERE ${s.join(" AND ")}\n      `)};createTable=async function(e,t,s){let r=e;t&&(r+="_"+t),r=r.replace(/-/g,""),await this.client.query(`\n      CREATE TABLE sheets.data_${r} (\n        id bigserial,\n        data_x text[],\n        data_y integer,\n        data_status smallint,\n        CONSTRAINT data_${r}_id_pkey PRIMARY KEY (id),\n        CONSTRAINT data_${r}_data_y_key UNIQUE (data_y) DEFERRABLE\n      )\n      `),Array.isArray(s)&&await Promise.all(s.map(((e,t)=>{const s={data_y:t,data_status:1};return Array.isArray(e)?e.forEach(((e,t)=>{s[`data_x[${t}]`]=e})):e.data.forEach(((e,t)=>{s[`data_x[${t}]`]=e})),this.insert(`sheets.data_${r}`,s)})))};getUserLevel=async function(e,t){const s=await this.client.query("\n      SELECT sheet_user_level\n      FROM drive.sheets_users\n      WHERE sheet_id=$1 AND user_id=$2 AND sheet_user_status=1\n      ",[t,e]);return 1===s.rows.length?s.rows[0].sheet_user_level:-1};deleteRows=async function(e,t,s){const r=[];for(let e=s;e<s+t;e++)r.push(e);await this.client.query(`\n      DELETE FROM sheets.data_${e.replace(/-/g,"")}\n      WHERE data_y IN(${r.join(",")})\n    `),await this.rearrange(e,t,s,">","-")};generateForm=async function(e,t,s){const r=await this.client.query("\n      SELECT f.formify_id\n      FROM drive.formify f\n      WHERE f.cloud_guid=$1 AND f.cloud_worksheet=$2\n      ",[e,t]);1===r.rows.length?await this.client.query("\n        UPDATE drive.formify\n        SET formify_hash=$1\n        WHERE formify_id=$2\n        ",[s,r.rows[0].formify_id]):await this.insert("drive.formify",{cloud_guid:e,cloud_worksheet:t,formify_hash:s})};getDataY=async function(e,t,s){return(await this.client.query(`\n      SELECT data_x[${t}], data_y\n      FROM sheets.data_${e.replace(/-/g,"")}\n      ORDER BY data_x[${t}] ${s} NULLS LAST\n      `)).rows.map((e=>e.data_y))};setOrder=async function(e,t){const s=t.map(((e,t)=>[`data_y=${e}`,t])),r=[`data_y IN (${t.join(",")})`];return this.complexRearrange(e,s,r)};getUsers=async function(e){return(await this.client.query("SELECT user_id, sheet_user_email, sheet_user_level, sheet_user_token FROM drive.sheets_users WHERE sheet_guid = $1 AND sheet_user_status > 0",[e])).rows};addUser=async function(e){if((await this.client.query("\n      SELECT sheet_id\n      FROM drive.sheets_users\n      WHERE sheet_guid = $1 AND sheet_user_email = $2\n      ",[e.sheet_guid,e.user_email])).rows.length>0)throw new Error("User already invited");await this.insert("drive.sheets_users",{...e,sheet_user_date:"NOW()"})};updateUser=async function(e,t,s){await this.update("drive.sheets_users",{sheet_user_level:parseInt(s)},{sheet_id:e,sheet_user_email:t})};deleteUser=async function(e,t){let s="\n      DELETE FROM drive.sheets_users\n      WHERE sheet_id = $1\n    ";const r=[e];t&&(s+=" AND sheet_user_email = $2",r.push(t)),await this.client.query(s,r)};dropTable=async function(e){return this.client.query(`DROP TABLE ${e}`)};deleteAll=async function(e){return this.client.query(`DELETE FROM ${e}`)};deleteSpreadsheet=async function(e){if(1!==(await this.client.query("\n      UPDATE drive.sheets\n      SET sheet_status = 0\n      WHERE sheet_guid = $1\n    ",[e])).rowCount)throw new Error("Something went wrong")};getSpreadsheetsByUserId=async function(e){return(await this.client.query("\n      SELECT sheet_guid, sheet_description, sheet_updated, sheet_status, sheet_privacy\n      FROM drive.sheets\n      WHERE user_id = $1\n      ORDER BY sheet_created DESC\n    ",[e])).rows};getFormifyByHash=async function(e){const t=await this.client.query("\n      SELECT *\n      FROM drive.formify as fo\n      WHERE fo.formify_hash = $1\n    ",[e]);if(1!==t.rows.length)throw new Error("Could not find the form");return t.rows[0]};getColumnDataAsSource=async function(e,t,s){let r=`SELECT id, data_x[${t}] as name`;return void 0!==s&&(r+=`, data_x[${s}] as image`),r+=`\n      FROM sheets.data_${e}\n      WHERE ${t} IS NOT NULL\n      ORDER BY data_y\n    `,(await this.client.query(r)).rows};alreadySentTheForm=async function(e,t){return 0!=(await this.client.query("\n      SELECT COUNT(*)\n      FROM drive.formify_log\n      WHERE formify_id = $1 AND ip = $2\n    ",[e,t])).rows[0].count};registerFormSubmitter=async function(e,t){return this.insert("drive.formify_log",{formify_id:e,ip:t})};getSheetIdWithSmallToken=async function(e,t){const s=await this.client.query("\n      SELECT sheet_id\n      FROM drive.sheets_users\n      WHERE sheet_guid = $1 AND sheet_user_token = $2\n    ",[e,t]);return 1!==s.rows.length?null:s.rows[0].sheet_id};getLevelWithSmallToken=async function(e,t){const s=await this.client.query("\n      SELECT sheet_user_level\n      FROM drive.sheets_users\n      WHERE sheet_id = $1 AND sheet_user_token = $2\n    ",[e,t]);return 1!==s.rows.length?-1:s.rows[0].sheet_user_level};tokenIsValid=async function(e,t){const s=await this.client.query("\n      SELECT COUNT(*)\n      FROM drive.signature\n      WHERE user_id = $1 AND user_signature = $2\n    ",[e,t]);return!!s.rows.length&&!!parseInt(s.rows[0].count)}}},879:(e,t,s)=>{var r=s(85).sha512;e.exports=function(e){var t=null,s=process.env.LICENSE,o=[74,50,48,50,48,33].join(""),n=function(e){return Buffer.from(e,"base64").toString()};return function(s){t=1;try{if(s){var i=n(s);if((i=i.split(","))[1])if(i[1]=n(i[1]),i[0]!=function(e,t){var s=r,o="",n="";e.length>128&&(e=s(e));for(var i=0;i<128;i++){var a=e[i]?e[i].charCodeAt(0):0;o+=String.fromCharCode(54^a),n+=String.fromCharCode(92^a)}return s(n+s(o+t))}(o,i[1]))t=3;else if(i[1]=JSON.parse(i[1]),i[1].date){for(var a=e,h=!1,l=0;l<i[1].domain.length;l++)-1===i[1].domain[l].indexOf(".")?a===i[1].domain[l]&&(h=!0):a.substr(a.indexOf(i[1].domain[l]))==i[1].domain[l]&&(h=!0);!1===h?t=4:i[1].scope&&i[1].scope.indexOf("server")>=0?(a=new Date,h=parseInt(a.getTime()/1e3),t=i[1].date<h?i[1].date+2592e3<h?6:7:8):t=5}else t=4;else t=2}}catch(e){console.log(e)}}(s),!(t<8)}},124:(e,t,s)=>{const{Router:r}=s(566),o=s(429),{genericResponse:n,isAjax:i}=s(14),a=s(203),{configurationMiddleware:h,createSpreadsheetMiddleware:l,ensureFormData:c}=s(860),d=s(786),u=s(130),f=s(541),m=s(378),w=s(680),p=s(183),y=s(355),g=s(191),E=s(664),b=s(278),k=s(99),_=s(883),v=s(939),C=s(79),I=s(827),T=s(284),O=s(916),A=s(963),S=s(147),R=s(45),D=s(413),j=s(748),x=s(794),N=s(498),q=s(574),$=s(897),B=s(772),W=s(879),L=s(64),F={create:A,comments:d,style:u,footers:f,freeze:m,properties:w,name:N,privacy:q,names:p,header:y,meta:g,value:x,data:E,height:b,nested:k,width:_,config:v,merge:C,columns:I,rows:T,worksheets:A,formify:S,orderby:R,users:D,history:j,validations:$};e.exports={mainRouter:e=>{const t=r();return t.use(((e,t,s)=>(e.headers.origin&&t.setHeader("Access-Control-Allow-Origin",e.headers.origin),t.setHeader("Access-Control-Allow-Methods","GET, POST, OPTIONS"),t.setHeader("Access-Control-Allow-Headers","pragma, cache-control, authorization, content-type, x-requested-with, jspreadsheet"),t.setHeader("Access-Control-Allow-Credentials",!0),t.setHeader("Content-Type","application/json"),W(e.headers.host)?s():(console.log("This software requires a license"),t.status(500).json(n(!1,"This software requires a license")))))),t.options("/*",(async(e,t)=>t.status(200).send())),t.post("/create",c,o().none(),(async(e,t)=>{const s=new a;try{await s.establishConnection();const r=await l(e,s);await s.client.query("BEGIN");let o=await O.post.call({body:e.body,...r});await s.client.query("COMMIT"),t.status(200).json(n(!0,null,o))}catch(e){await s.client.query("ROLLBACK"),t.status(400).json(n(!1,e.message))}finally{s.closeConnection()}})),t.get("/list",(async(e,t)=>{const s=new a;try{await s.establishConnection();const r=await l(e,s);let o=await B.get.call(r);t.status(200).json(o)}catch(e){t.status(400).json(n(!1,e.message))}finally{s.closeConnection()}})),t.post("/formify/:formId",c,o().none(),(async(t,s)=>{const{formId:r}=t.params,o=new a;try{await o.establishConnection(),await o.client.query("BEGIN");let i=await S.insertResponse.call({body:t.body,db:o},e,r,t.socket.remoteAddress);await o.client.query("COMMIT"),s.status(200).json(n(!0,i))}catch(e){await o.client.query("ROLLBACK"),s.status(400).json(n(!1,e.message))}finally{o.closeConnection()}})),t.get("/formify/:formId",(async(e,t)=>{const s=new a;try{await s.establishConnection();const{formId:r}=e.params;if(i(e)){const e=await S.getFormInfo.call({db:s},r);t.status(200).json(e)}else{const e=S.getFormifyHtml(r);t.setHeader("Content-Type","text/html"),t.send(Buffer.from(e))}}catch(e){t.status(400).json(n(!1,e.message))}finally{s.closeConnection()}})),t.get("/:sheetGuid/token/:smallToken",(async(e,t)=>{const s=new a;try{await s.establishConnection();const{sheetGuid:r,smallToken:o}=e.params,n=await L.smallTokenToCompleteToken.call({db:s},r,o);return t.status(200).json(n)}catch(e){t.status(400).json(n(!1,e.message))}finally{s.closeConnection()}})),t.get("/*/all",(async(t,s)=>{const r=new a;try{await r.establishConnection();const o=await h(t,r,e);let n={body:t.body,...o},i=await v.getAll.call(n);s.status(200).json(i)}catch(e){s.status(400).json(n(!1,e.message))}finally{r.closeConnection()}})),t.get("/license/:domain",(async(e,t)=>{const{domain:s}=e.params;return t.redirect(301,"https://jspreadsheet.com/license/"+s)})),t.all("/*/*",o().none(),(async(t,s)=>{if(!("POST"!==t.method||t.headers["content-type"]&&t.headers["content-type"].startsWith("multipart/form-data")))return s.status(415).json(n(!1,"The Content-Type must be multipart/form-data"));const r=new a;try{await r.establishConnection();const o=await h(t,r,e);let i={body:t.body,...o};if(!F[i.action])return s.status(404).send();if(!F[i.action][i.method])return s.status(405).send();await r.client.query("BEGIN");let a=await F[i.action][i.method].call(i);if(await r.client.query("COMMIT"),"get"===i.method)s.status(200).json(a);else if(i.emit.perform.call(i),a){const{message:e,...t}=a;s.status(200).json(n(!0,e,t))}else s.status(200).json(n(!0))}catch(e){await r.client.query("ROLLBACK"),s.status(400).json(n(!1,e.message))}finally{r.closeConnection()}})),t.get("/*",(async(t,s)=>{const r=new a;try{await r.establishConnection();const o=await h(t,r,e);let n={body:t.body,...o},i=await v.getSpreadsheet.call(n);s.status(200).json(i)}catch(e){s.status(400).json(n(!1,e.message))}finally{r.closeConnection()}})),t.delete("/*",(async(t,s)=>{const r=new a;try{await r.establishConnection();const o=await h(t,r,e);await r.client.query("BEGIN"),await O.delete.call({...o}),await r.client.query("COMMIT"),o.emit.perform.call(o),s.status(200).json(n(!0,"Deleted"))}catch(e){await r.client.query("ROLLBACK"),s.status(400).json(n(!1,e.message))}finally{r.closeConnection()}})),t.use(((e,t,s,r)=>(console.log(e),s.status(500).json(n(!1,e.message))))),t}}},860:(e,t,s)=>{const r=s(25),{unsignedInt:o}=s(325),{getToken:n,isValid:i}=s(68),{genericResponse:a}=s(14),h=e=>{if(e.includes("."))return(e=>r.verify(e,process.env.BOSSANOVA_JWT_SECRET,{algorithms:["HS512"]}))(e);{const t=Buffer.from(e,"base64").toString("utf-8"),s=t.indexOf(",");if(s<1)throw new Error("Invalid token");return{user_id:parseInt(t.slice(0,s)),user_signature:t.slice(s+1)}}},l=({cookie:e,authorization:t})=>{if(t){const e=t.split(" ");if(!e[1])throw new Error("Incomplete access token");return h(e[1])}if(e){const t=n(e),s=i(t);return{user_id:s.user_id,user_signature:s.user_signature}}throw new Error("A valid authentication method must be sent")},c=async(e,t,s)=>e.user_id===t?4:e.sheet_privacy?s.getUserLevel(t,parseInt(e.sheet_id)):3;e.exports={configurationMiddleware:async(e,t,s)=>{const r=e.url.split("/");let[n,i]=r[1].split(",");if(36!==n.length)throw new Error("Spreadsheet not found");const a=l(e.headers),h=await t.getCloudByGuid(n);if(!h)throw new Error("Spreadsheet not found");if(a.sheet_id&&a.sheet_id!==parseInt(h.sheet_id))throw new Error("Incorrect sheetId");let d;if(a.small_token){if(!a.sheet_id)throw new Error("Invalid token");d=await t.getLevelWithSmallToken(a.sheet_id,a.small_token)}else{if(!a.user_id||!a.user_signature||!await t.tokenIsValid(a.user_id,a.user_signature))throw new Error("Invalid token");d=await c(h,a.user_id,t)}const u="GET"===e.method?0:1;if(d<0||d<u)throw new Error("Permission denied");if(0===d&&(h.sheet_config.editable=!1),i){if(!o.test(i))throw new Error("Invalid worksheet index");if(i=parseInt(i),i&&i>=h.sheet_config.worksheets.length)throw new Error("Invalid worksheet index")}else i=0;return{cloud:h,permissionLevel:d,action:r[2],guid:n,worksheet:i,worksheetId:h.sheet_config.worksheets[i]?.worksheetId,config:h.sheet_config,method:e.method.toLowerCase(),requestedBySpreadsheet:!!e.headers.jspreadsheet,commit:async function(){return t.setConfig(this.guid,this.config)},emit:{global:function(e){this.name=e},request:function(e,t){this.method=e,this.methodArgs=t},perform:function(){if(e.headers.jspreadsheet)return;const t="object"==typeof this.emit.methodArgs?Object.values(this.emit.methodArgs):[];s.to(this.guid).emit(this.emit.name||"JSS",{user:"jss-api",worksheet:this.worksheetId,method:this.emit.method,args:t})}},params:r.splice(2),db:t,userId:a.user_id}},createSpreadsheetMiddleware:async(e,t)=>{const s=l(e.headers);if(!s.user_id||!s.user_signature)throw new Error("This is only for registered users");if(!await t.tokenIsValid(s.user_id,s.user_signature))throw new Error("Invalid token");return{db:t,userId:s.user_id}},getInfoFromJwt:h,hasPermission:c,ensureFormData:function(e,t,s){if(!e.headers["content-type"]||!e.headers["content-type"].startsWith("multipart/form-data"))return t.status(415).json(a(!1,"The Content-Type must be multipart/form-data"));s()}}},827:(e,t,s)=>{const r=s(79),{updateReferences:o,copyConfig:n,copyFooters:i,unsignedInt:a,updateNestedHeaders:h,parseBooleans:l}=s(325),{isWithinLimits:c,getColumnNameFromCoords:d,getCoordsFromCellName:u}=s(218),f={moveColumn:async function(){if(!this.body.f)throw new Error("The f field is required");if(!this.body.t)throw new Error("The t field is required");if(!a.test(this.body.f))throw new Error("Invalid f field");if(!a.test(this.body.t))throw new Error("Invalid t field");const e=parseInt(this.body.f),t=parseInt(this.body.t);if(e===t)throw new Error("The 'f' and 't' properties must be different");const s=this.config.worksheets[this.worksheet];if(!c([e],{numOfColumns:s.minDimensions[0],numOfRows:s.minDimensions[1]})||!c([t],{numOfColumns:s.minDimensions[0],numOfRows:s.minDimensions[1]}))throw new Error("An error has happened - Out of range");if(s.columns||(s.columns=[]),s.mergeCells){const o=Object.entries(s.mergeCells);for(let s=0;s<o.length;s++){const[n,i]=o[s];let a=u(n)[0],h=a+i[0]-1;if(e>=a&&e<=h){r.destroyMerge.call(this);break}if(e<a&&t>=a&&h--,e>h&&t<=h&&a++,t>=a&&t<=h)throw new Error("The target column cannot be part of merged cells")}}const h={};if(e<t)for(let s=e;s<t;s++){const e=s+1;h[`data_x[${s}]`]=`data_x[${e}]`,n.call(this,s,e,"columns")}else for(let s=e;s>t;s--){const e=s-1;h[`data_x[${s}]`]=`data_x[${e}]`,n.call(this,s,e,"columns")}h[`data_x[${t}]`]=`data_x[${e}]`,i.call(this,e,t);let l=this.guid;s.worksheetId&&(l+="_"+s.worksheetId),await this.db.updateAll(l,h);const f=s.minDimensions[1],m={};if(e<t)for(let s=0;s<f;s++)for(let r=e+1;r<=t;r++){const e=d(r,s),t=d(r-1,s);m[e]=t}else for(let s=0;s<f;s++)for(let r=t;r<=e-1;r++){const e=d(r,s),t=d(r+1,s);m[e]=t}for(let s=0;s<f;s++){const r=d(e,s),o=d(t,s);m[r]=o}if(o.call(this,m),!await this.commit())throw new Error;this.emit.request("moveColumn",[e,t])},insertColumn:async function(){if(!this.body.numOfColumns)throw new Error("The numOfColumns field is required");if(!a.test(this.body.numOfColumns))throw new Error("The numOfColumns field must be a positive integer");if(this.body.properties&&(!Array.isArray(this.body.properties)||this.body.properties.some((e=>"object"!=typeof e))))throw new Error("The properties field must be an array of objects");l(this.body.properties);const e=parseInt(this.body.numOfColumns);if(e<1)throw new Error("The numOfColumns field must be a positive integer");const t=this.config.worksheets[this.worksheet];let s=t.minDimensions[0];t.minSpareCols>0&&(s+=t.minSpareCols),a.test(this.body.columnNumber)||(this.body.columnNumber=s-1,this.body.insertBefore="false");const r=parseInt(this.body.columnNumber);let n;if(t.columns||(t.columns=[]),"false"!==this.body.insertBefore&&"0"!==this.body.insertBefore&&this.body.insertBefore){if("true"!==this.body.insertBefore&&"1"!==this.body.insertBefore)throw new Error("The insertBefore field must be 0, 1 or a boolean");n=!0}else n=!1;let i=r;if(n||i++,!c([r],{numOfColumns:t.minDimensions[0],numOfRows:t.minDimensions[1]}))throw new Error("An error has happened - Out of range");const u={};for(let t=s;t>=i;t--)u[`data_x[${t+e}]`]=`data_x[${t}]`;for(;t.columns.length<i;)t.columns.push({});for(let s=e-1;s>=0;s--)t.columns.splice(i,0,this.body.properties&&this.body.properties[s]||{}),u[`data_x[${s+i}]`]="NULL";let f=this.guid;t.worksheetId&&(f+="_"+t.worksheetId),Object.keys(u).length>0&&await this.db.updateAll(f,u);const{data:m}=this.body;Array.isArray(m)&&await Promise.all(m.map((async(e,t)=>{let s={data_y:t,data_status:1};return e.forEach(((e,t)=>{s[`data_x[${i+t}]`]=e})),this.db.upsert(f,s)})));let w=t.minDimensions[1];t.minSpareRows>0&&(w+=t.minSpareRows);const p={};for(let t=0;t<w;t++)for(let r=i;r<=s;r++){const s=d(r,t),o=d(r+e,t);p[s]=o}this.requestedBySpreadsheet||h.call(this,[r,e]),o.call(this,p);const y=[];for(let t=e;t>0;t--)y.push(null);if(Array.isArray(t.footers))for(let e=0;e<t.footers.length;e++)t.footers[e].splice(i,0,...y);if(t.minDimensions&&t.minDimensions[0]&&(t.minDimensions[0]+=e),!await this.commit())throw new Error;this.emit.request("insertColumn",{numOfColumns:e,columnNumber:r,insertBefore:n?1:0,properties:this.body.properties,data:m||[]})},deleteColumn:async function(){if(!this.body.columnNumber)throw new Error("The columnNumber field is required");if(!a.test(this.body.columnNumber))throw new Error("Invalid columnNumber field");const e=this.config.worksheets[this.worksheet];e.columns||(e.columns=[]);const t=e.minDimensions[0],s=parseInt(this.body.columnNumber);let r;if(this.body.numOfColumns){if(!a.test(this.body.numOfColumns))throw new Error("Invalid numOfColumns field");r=parseInt(this.body.numOfColumns)}else r=1;if(s+r>t)throw new Error("Column does not exist");const n=[];for(let e=0;e<s;e++)n.push(`data_x[${e}]`);for(let e=s;e<t-r;e++){const t=e+r;n.push(`data_x[${t}]`)}const i=t-r-1,l=n.join(",");let c=this.guid;e.worksheetId&&(c+="_"+e.worksheetId),await this.db.updateAll(c,{data_x:`CONCAT('[0:${i}]=', ARRAY[${l}])::text[]`});const u={},f=[],m=e.minDimensions[1];for(let e=0;e<m;e++)for(let t=s;t<s+r;t++)f.push(d(t,e));for(let e=0;e<m;e++)for(let o=s+r;o<t;o++){const t=d(o,e),s=d(o-r,e);u[t]=s}if(e.columns.splice(s,r),Array.isArray(e.footers))for(let t=0;t<e.footers.length;t++)e.footers[t].splice(s,r);if(this.requestedBySpreadsheet||h.call(this,null,[s,r]),o.call(this,u,f),e.minDimensions&&e.minDimensions[0]&&(e.minDimensions[0]-=r),!await this.commit())throw new Error;this.emit.request("deleteColumn",{columnNumber:s,numOfColumns:r})},post:function(){return"move"===this.params[1]?f.moveColumn.call(this):"delete"===this.params[1]?f.deleteColumn.call(this):f.insertColumn.call(this)}};e.exports=f},786:(e,t,s)=>{const{isWithinLimits:r,isValidCellName:o}=s(218),n=s(325),i={get:function(){const e=this.config.worksheets[this.worksheet];if(e.comments&&0!==Object.keys(e.comments)){if(this.params[1]){const t=n.getRequestedCells(this.params[1]),s={};return t.forEach((t=>{s[t]=e.comments[t]})),s}return e.comments}return{}},post:async function(){const e=this.body;if("object"!=typeof e)throw new Error("The comments must be specified");const t=this.config.worksheets[this.worksheet];if(t.comments||(t.comments={}),Object.entries(e).forEach((([e,s])=>{if(!o(e))throw new Error("An error has happened - Invalid cell name");if(!r(e,{numOfColumns:t.minDimensions[0],numOfRows:t.minDimensions[1]}))throw new Error("An error has happened - Out of range");""===s?delete t.comments[e]:t.comments[e]=s})),!await this.commit())throw new Error;this.emit.request("setComments",[e])}};e.exports=i},939:(e,t,s)=>{const{parseBooleans:r}=s(325),o={getConfig:function(){return this.config.worksheets[this.worksheet]},getSpreadsheet:async function(){return this.config.plugins&&delete this.config.plugins,this.config.worksheets=await Promise.all(this.config.worksheets.map((async e=>{e.columns||(e.columns=[]);let t=this.guid;e.worksheetId&&(t+="_"+e.worksheetId);let s=e.minDimensions[0];e.minSpareCols&&e.minSpareCols>0&&(s+=e.minSpareCols);const r={};for(let t=0;t<s;t++)e.columns[t]||(e.columns[t]={}),e.columns[t].name&&(r[t]=e.columns[t].name);const o=["id","data_y"];for(let e=0;e<s;e++)o.push(`data_x[${e}] as c${e}`);return e.data=await this.db.getData(t,o,r),this.permissionLevel<1&&(e.editable=!1),e}))),this.config},getAll:async function(){const[e,t]=await Promise.all([this.db.getSuperficialCloudInformationByGuid(this.guid),o.getSpreadsheet.call(this)]);return{...e,config:t}},get:function(){return this.params[1]?o.getSpreadsheet.call(this):o.getConfig.call(this)},post:async function(){const e=this.config.worksheets[this.worksheet];e&&"object"==typeof e||(e={});let t=this.body;if(r(t),t.data){if("string"!=typeof t.data)throw new Error("The data property must be a json");try{t=JSON.parse(t.data)}catch(e){throw new Error("The data property must be a valid json")}}if(Object.entries(t).forEach((([t,s])=>{"definedNames"===t||"toolbar"===t||"tabs"===t?this.config[t]=s:e[t]=s})),!await this.commit())throw new Error;this.emit.request("setConfig",[t])}};e.exports=o},664:(e,t,s)=>{const r=s(748),o={get:async function(){const e=this.config.worksheets[this.worksheet];let t=e.minDimensions[0];e.minSpareCols>0&&(t+=e.minSpareCols);const s=["id","data_y"];for(let e=0;e<t;e++)s.push(`data_x[${e}] as c${e}`);let r=this.guid;return e.worksheetId&&(r+="_"+e.worksheetId),this.db.getData(r,s)},post:async function(){const e=this.config.worksheets[this.worksheet],{data:t}=this.body;if(!Array.isArray(t))throw new Error("Invalid data format");const s=t.length,o=Math.max(...[...t].map((e=>{if(!e)return 0;if(Array.isArray(e))return e.length;if(Array.isArray(e.data)&&e.row)return e.data.length;throw new Error("Invalid data format")})));let n=!1;o>e.minDimensions[0]&&(e.minDimensions[0]=o,n=!0),s>e.minDimensions[1]&&(e.minDimensions[1]=s,n=!0),await r.setVersion.call(this);let i=this.guid.replace(/-/g,"");e.worksheetId&&(i+="_"+e.worksheetId),await this.db.deleteAll("sheets.data_"+i);try{const e=[];n&&e.push(this.commit()),e.push(...t.map((async(e,t)=>{let s;return e.row&&e.data?(s={data_y:e.row,data_status:1},e.data.forEach(((e,t)=>{if("string"!=typeof e)throw new Error("Invalid cell content");s[`data_x[${t}]`]=e}))):(s={data_y:t,data_status:1},e.forEach(((e,t)=>{if("string"!=typeof e)throw new Error("Invalid cell content");s[`data_x[${t}]`]=e}))),this.db.upsert(i,s)}))),await Promise.all(e);for(let e=0;e<t.length;e++)t[e]||(t[e]=[]);this.emit.request("setData",[t])}catch(e){if(e.message)throw e;throw new Error("An error has happen")}}};e.exports=o},183:(e,t,s)=>{const{isValidCellName:r}=s(218),o={get:function(){return this.config&&this.config.definedNames?this.config.definedNames:{}}},n=/[^\d\w_]/;o.post=async function(){let e=this.body.data;e=e.map((e=>{if("object"!=typeof e)throw new Error("All items in the data array must be objects");const{index:t,value:s}=e;if(!t)throw new Error("All items in the data array must have the index property");if(n.test(t))throw new Error("There are defined names having invalid characters");if(r(t))throw new Error("A defined name cannot have a name equal to the coordinate of a cell");if(s&&"string"!=typeof s)throw new Error("If an item's value exists, it must be a string");return{index:t.toLocaleUpperCase(),value:s}}));let t=e.map((({index:e})=>e));if(t.some(((e,s)=>t.indexOf(e)!==s)))throw new Error("A defined name cannot have more than one value");if(this.config.definedNames||(this.config.definedNames={}),e.forEach((({index:e,value:t})=>{t?this.config.definedNames[e]=t:delete this.config.definedNames[e]})),!await this.commit())throw new Error;this.emit.request("setDefinedNames",[e])},e.exports=o},541:e=>{const t={get:function(){return this.config.worksheets[this.worksheet].footers||[]},setFooters:async function(){if(!this.body||!this.body.data)throw new Error("The data field is required");const{data:e}=this.body;if(!Array.isArray(e))throw new Error("The data must be an array");const t=this.config.worksheets[this.worksheet];let s=e.map((e=>{if(!Array.isArray(e))throw new Error("The data must be an array of arrays");return e.map((e=>{const t=typeof(e=e||"");if("number"!==t&&"string"!==t)throw new Error("An error has happened - Cell with invalid type value");return e}))}));s.forEach((e=>{if(e.length>t.minDimensions[0])throw new Error("An error has happened - Out of range")}));for(let e=0;e<s.length;e++)s[e]||(s[e]=[]);if(t.footers=s,!await this.commit())throw new Error;this.emit.request("setFooter",[s])},setFootersValue:async function(){let{x:e,y:t,value:s}=this.body;if(e=parseInt(e),t=parseInt(t),!Number.isInteger(e)||e<0||!Number.isInteger(t)||t<0)throw new Error("An error has happened - Invalid position");const r=typeof s;if("number"!==r&&"string"!==r)throw new Error("An error has happened - Cell with invalid type value");const o=this.config.worksheets[this.worksheet];if(e>=o.minDimensions[0])throw new Error("An error has happened - Out of range");if(o.footers||(o.footers=[]),o.footers.length<=t)throw new Error("This position does not exist in the footer");for(;o.footers[t].length<=e;)o.footers[t].push("");if(o.footers[t][e]=s,!await this.commit())throw new Error;this.emit.request("setFooterValue",[e,t,s])},post:function(){return"value"===this.params[1]?t.setFootersValue.call(this):t.setFooters.call(this)},delete:async function(){const e=this.config.worksheets[this.worksheet];if(e.footers){if(delete e.footers,!await this.commit())throw new Error;this.emit.request("resetFooter",[])}}};e.exports=t},147:(e,t,s)=>{const r=s(446),o=s(284),n={},i=async function(e,t){const s=void 0!==t.worksheetColumn?t.worksheetColumn:0;let r=e.sheet_guid.replace(/-/g,"");return t.worksheetId&&(r+="_"+t.worksheetId),this.db.getColumnDataAsSource(r,s,t.worksheetImage)};n.getFormifyHtml=function(e){return`\n    <div id='formify' data-formify="${e}"></div>\n    <script src="/v9/formify.js"><\/script>\n    <script>\n    formifyCreate(document.getElementById('formify'));\n    <\/script>\n  `},n.getFormInfo=async function(e){const t=await this.db.getFormifyByHash(e),s=await this.db.getCloudByGuid(t.cloud_guid);let r=s.sheet_config.worksheets.find((e=>e.worksheetId?!!t.cloud_worksheet&&e.worksheetId===t.cloud_worksheet:!t.cloud_worksheet)),o=!!(r.formify&&r.formify.columns.length>0)&&r.formify.columns;o&&(o=o.map((e=>parseInt(e))));let n=[];for(let e=0;e<r.minDimensions[0];e++)o&&!o.includes(e)?n.push({type:"hidden"}):n.push(r.columns&&r.columns[e]||{});return n=await Promise.all(n.map((async e=>("record"===e.type&&(e.type="dropdown",e.source=await i.call(this,s,e)),e)))),{columns:n,formify:r.formify}};const a=/(\d{1,3}).(\d{1,3}).(\d{1,3}).(\d{1,3})$/;n.insertResponse=async function(e,t,s){const r=await this.db.getFormifyByHash(t),n=await this.db.getCloudByGuid(r.cloud_guid),i=n.sheet_config.worksheets.findIndex((e=>e.worksheetId?!!r.cloud_worksheet&&e.worksheetId===r.cloud_worksheet:!r.cloud_worksheet)),h=n.sheet_config.worksheets[i];if(h.formify.oneEntryPerUser){const e=(e=>{const t=a.exec(e).slice(1);let s=0;return s+=parseInt(t[0],10)<<24,s+=parseInt(t[1],10)<<16,s+=parseInt(t[2],10)<<8,s+=parseInt(t[3],10),s})(s);if(await this.db.alreadySentTheForm(r.formify_id,e))throw new Error("Sorry, but this form allows only one submission");await this.db.registerFormSubmitter(r.formify_id,e)}const l={...this,config:n.sheet_config,worksheet:i,guid:n.sheet_guid,commit:async function(){return this.db.setConfig(this.guid,this.config)},emit:{request:(t,s)=>{const r=Object.values(s);e.to(n.sheet_guid).emit("JSS",{user:"jss-api",worksheet:h.worksheetId,method:t,args:r})}},body:{data:[this.body.data]}};try{await o.insertRow.call(l)}catch(e){throw new Error("Something went wrong")}return h.formify.completeMessage||"Thank you for your participation"},n.post=async function(){if(4!==this.permissionLevel)throw new Error("Resource restricted to spreadsheet owner");const e=r.v4(),t=this.config.worksheets[this.worksheet].worksheetId||"";try{return await this.db.generateForm(this.guid,t,e),{message:"Successfully saved",token:e,url:`https://jspreadsheet.com/api/formify/${e}`}}catch(e){throw new Error("Something went wrong")}},e.exports=n},378:(e,t,s)=>{const{unsignedInt:r}=s(325),o={get:function(){const e=this.config.worksheets[this.worksheet];if("columns"===this.params[1])return e.freezeColumns??null;if("rows"===this.params[1])return e.freezeRows??null;throw new Error("Invalid route")},setColumns:async function(){const e=this.config.worksheets[this.worksheet];if(void 0===this.body.column)throw new Error("No data was sent");if(this.body.column){if(!r.test(this.body.column))throw new Error("The column field must be an unsigned integer or an empty string");if(this.body.column=parseInt(this.body.column),this.body.column){if(this.body.column>10)throw new Error("The column field cannot have a value greater than 10");if(this.body.column>e.minDimensions[0])throw new Error("The column field cannot have a value greater than the number of columns in the worksheet");e.freezeColumns=this.body.column}else delete e.freezeColumns}else{if(""!==this.body.column)throw new Error("The column field is required");delete e.freezeColumns}if(!await this.commit())throw new Error;this.emit.request("setFreezeColumns",[this.body.column])},setRows:async function(){const e=this.config.worksheets[this.worksheet];if(this.body.row){if(!r.test(this.body.row))throw new Error("The row field must be an unsigned integer or an empty string");if(this.body.row=parseInt(this.body.row),this.body.row){if(this.body.row>10)throw new Error("The row field cannot have a value greater than 10");if(this.body.row>e.minDimensions[1])throw new Error("The row field cannot have a value greater than the number of rows in the worksheet");e.freezeRows=this.body.row}else delete e.freezeRows}else{if(""!==this.body.row)throw new Error("The row field is required");delete e.freezeRows}if(!await this.commit())throw new Error;this.emit.request("setFreezeRows",[this.body.row])},post:async function(){if("columns"===this.params[1])return o.setColumns.call(this);if("rows"===this.params[1])return o.setRows.call(this);throw new Error("Invalid route")}};e.exports=o},355:(e,t,s)=>{const{getColumnName:r}=s(325),{isWithinLimits:o}=s(218),n=/^\d+$/,a={get:function(){const e=this.config.worksheets[this.worksheet];e.columns||(e.columns=[]);let t,s=[];if(this.params[1])s=this.params[1].split(","),t={};else{for(i=0;i<e.minDimensions[0];i++)s.push(i);t={}}return s.forEach((s=>{n.test(s)&&(e.columns[s]&&e.columns[s].title?t[s]=e.columns[s].title:t[s]=r(s))})),t},post:async function(){const e=this.config.worksheets[this.worksheet];let{column:t,title:s}=this.body;if("string"!=typeof t)throw new Error("Column must be a valid number");if("string"!=typeof s)throw new Error("Title must be a text");if(t=parseInt(t),!Number.isInteger(t))throw new Error("Column must be a valid number");if(!o([t],{numOfColumns:e.minDimensions[0],numOfRows:e.minDimensions[1]}))throw new Error("An error has happened - Out of range");for(e.columns||(e.columns=[]);t>=e.columns.length;)e.columns.push({type:"text"});if(e.columns[t]&&(e.columns[t].title=s),!await this.commit())throw new Error;this.emit.request("setHeader",{column:t,title:s})}};e.exports=a},278:(e,t,s)=>{const{isWithinLimits:r}=s(218),{unsignedInt:o}=s(325),n={get:function(){const e=this.config.worksheets[this.worksheet];if(!e.rows)return{};let t=[];if(this.params[1])t=this.params[1].split(",");else{const s=e.minDimensions[1];for(let e=0;e<s;e++)t.push(e)}const s={};return t.forEach((t=>{e.rows[t]&&e.rows[t].height&&(s[t]={height:parseInt(e.rows[t].height)})})),s},post:async function(){let{height:e,row:t}=this.body;if(!e||!t)throw new Error("The row and height must be informed");const s=this.config.worksheets[this.worksheet];if(s.rows||(s.rows=[]),Array.isArray(t))t.forEach(((t,n)=>{if(t=parseInt(t),!Number.isInteger(t))throw new Error("Invalid row");if(!r([,t],{numOfColumns:s.minDimensions[0],numOfRows:s.minDimensions[1]}))throw new Error("An error has happened - Out of range");let i=Array.isArray(e)?e[n]:e;if(!o.test(i))throw new Error("The height must be an unsigned integer");for(i=parseInt(i);s.rows.length<=t;)s.rows.push({});s.rows[t].height=i+"px"}));else{if(t=parseInt(t),!Number.isInteger(t))throw new Error("Invalid row");if(!r([,t],{numOfColumns:s.minDimensions[0],numOfRows:s.minDimensions[1]}))throw new Error("An error has happened - Out of range");if(Array.isArray(e))throw new Error("The height can only be an array when the row is also");if(!o.test(e))throw new Error("the height must be an unsigned integer");const n=parseInt(e);for(;s.rows.length<=t;)s.rows.push({});s.rows[t].height=n+"px"}if(!await this.commit())throw new Error;this.emit.request("setHeight",this.body)}};e.exports=n},748:(e,t,s)=>{const r=s(796),o=s(205),n=s(939),i=s(916),a={setVersion:async function(){const e=new Date,t=[e.getFullYear(),(e.getMonth()+1).toString().padStart(2,"0"),e.getDate().toString().padStart(2,"0"),e.getHours().toString().padStart(2,"0"),e.getMinutes().toString().padStart(2,"0"),e.getSeconds().toString().padStart(2,"0")],s=this.guid+"/b/"+t.join(""),i=await n.getSpreadsheet.call(this),a=r.deflateSync(JSON.stringify(i));return await o.save(s,a),{message:"Snapshop created successfully"}},recoverVersion:async function(){const e=this.params[2];if(!e)throw new Error("The version id must be specified");const[t,s]=await Promise.all([o.get(this.guid+"/b/"+e),n.getSpreadsheet.call(this)]).catch((e=>{if(e.code&&"NoSuchKey"===e.code)throw new Error("Snapshot not found");throw new Error("Something went wrong")}));await a.setVersion.call(this),await Promise.all(s.worksheets.map((async e=>{const t="sheets.data_"+this.guid.replace(/-/g,"")+(e.worksheetId?"_"+e.worksheetId:"");return this.db.dropTable(t)})));const h=JSON.parse(r.inflateSync(t));return await i.create.call(this,h,{guid:this.guid}),this.emit.global("recovery"),{message:"Successfully recovered from snapshot"}},post:function(){if(4!==this.permissionLevel)throw new Error("Resource restricted to spreadsheet owner");return"recover"===this.params[1]?a.recoverVersion.call(this):a.setVersion.call(this)},get:async function(){if(4!==this.permissionLevel)throw new Error("Resource restricted to spreadsheet owner");const e=this.params[1];if(e){const t=await o.get(this.guid+"/b/"+e).catch((()=>{throw new Error("Snapshot not found")}));return JSON.parse(r.inflateSync(t))}return(await o.getByPrefix(this.guid+"/b/")).map((e=>{const t=e.Key.split("/"),s=new Date(e.LastModified),r=[s.getFullYear(),(s.getMonth()+1).toString().padStart(2,"0"),s.getDate().toString().padStart(2,"0")],o=[s.getHours().toString().padStart(2,"0"),s.getMinutes().toString().padStart(2,"0"),s.getSeconds().toString().padStart(2,"0")],n=r.join("-")+" "+o.join(":");return{versionId:t[2],date:n,size:e.Size}})).reverse()},delete:async function(){if(4!==this.permissionLevel)throw new Error("Resource restricted to spreadsheet owner");const e=this.params[1];if(!e)throw new Error("The version id must be specified");return await o.delete(this.guid+"/b/"+e),{message:"Snapshot removed successfully"}}};e.exports=a},772:e=>{e.exports={get:async function(){return this.db.getSpreadsheetsByUserId(this.userId)}}},79:(e,t,s)=>{const{getRequestedCells:r}=s(325),{isValidCellName:o,isWithinLimits:n,getCoordsFromCellName:i}=s(218),a=/^\d+$/,h={get:function(){const e=this.config.worksheets[this.worksheet];if(!e.mergeCells||0===Object.keys(e.mergeCells).length)return{};if(!this.params[1])return e.mergeCells;const t={};return r(this.params[1]).forEach((s=>{e.mergeCells[s]&&(t[s]=e.mergeCells[s])})),t},hasMergeConflict:function(e,t,s){const r=this.config.worksheets[this.worksheet];if(!r.mergeCells)return[];const o=i(e),n=o[0],a=n+t-1,h=o[1],l=h+s-1;return Object.keys(r.mergeCells).filter((e=>{const t=i(e),s=r.mergeCells[e],o=t[1],c=o+s[1]-1;if(l<o||h>c)return!1;const d=t[0],u=d+s[0]-1;return!(a<d||n>u)}))},applyMerge:function(e,t,s,r){if(!e||!o(e))throw new Error("An error has happened - Invalid cell name");if(!a.test(t)||!a.test(s))throw new Error("An error has happened - Invalid params");if(t=parseInt(t),s=parseInt(s),t<1||s<1)throw new Error("An error has happened - Invalid params");if(1===t&&1===s)throw new Error("Not allowed to create merges of size [1, 1]");const i=this.config.worksheets[this.worksheet];if(!n(e,{numOfColumns:i.minDimensions[0],numOfRows:i.minDimensions[1],colspan:t,rowspan:s}))throw new Error("An error has happened - Out of range");const l=h.hasMergeConflict.call(this,e,t,s);if(l.length>0){if(!r&&(l.length>1||l[0]!==e))throw new Error("An error has happened - Conflict");l.forEach((e=>{delete i.mergeCells[e]}))}i.mergeCells||(i.mergeCells={}),i.mergeCells[e]=[parseInt(t),parseInt(s)]},post:async function(){let e;if(this.body.cell){let t;if("false"!==this.body.force&&"0"!==this.body.force&&this.body.force){if("true"!==this.body.force&&"1"!==this.body.force)throw new Error("The force field must be 0, 1 or a boolean");t=!0}else t=!1;h.applyMerge.call(this,this.body.cell,this.body.colspan,this.body.rowspan,t),e={[this.body.cell]:[this.body.colspan,this.body.rowspan]}}else Object.entries(this.body).forEach((([e,t])=>{h.applyMerge.call(this,e,t[0],t[1],!0)})),e=this.body;if(!await this.commit())throw new Error;this.emit.request("setMerge",[e])},removeMerge:async function(){const e=this.config.worksheets[this.worksheet];let t=this.params[1];if(t.cell&&(t=t.cell),!o(t))throw new Error("An error has happened - Invalid cell name");if(!n(t,{numOfColumns:e.minDimensions[0],numOfRows:e.minDimensions[1]}))throw new Error("An error has happened - Out of range");if(!e.mergeCells)throw new Error("The cell is not part of a merge");const s=i(t),r=Object.keys(e.mergeCells).find((t=>{const r=i(t),o=r[1],n=o+e.mergeCells[t][1]-1,a=r[0],h=a+e.mergeCells[t][0]-1;return s[1]>=o&&s[1]<=n&&s[0]>=a&&s[0]<=h}));if(!r)throw new Error("The cell is not part of a merge");if(delete e.mergeCells[r],Object.keys(e.mergeCells).length||delete e.mergeCells,!await this.commit())throw new Error;this.emit.request("removeMerge",[r])},destroyMerge:async function(){const e=this.config.worksheets[this.worksheet];if(e.mergeCells){if(delete e.mergeCells,!await this.commit())throw new Error;this.emit.request("destroyMerge",[])}},delete:function(){if(this.params[1])return h.removeMerge.call(this);h.destroyMerge.call(this)}};e.exports=h},191:(e,t,s)=>{const{getRequestedCells:r,parseBooleans:o}=s(325),{isValidCellName:n,isWithinLimits:i}=s(218),a={get:function(){const e=this.config.worksheets[this.worksheet];if(!e.meta||0===Object.keys(e.meta).length)return{};if(!this.params[1])return e.meta;const t=r(this.params[1]),s={};return t.forEach((t=>{s[t]=e.meta[t]})),s},post:async function(){const e=this.config.worksheets[this.worksheet];if(e.meta||(e.meta={}),Object.entries(this.body).forEach((([t,s])=>{if(s){if(!n(t))throw new Error("An error has happened - Invalid cell name");if(!i(t,{numOfColumns:e.minDimensions[0],numOfRows:e.minDimensions[1]}))throw new Error("An error has happened - Out of range");if("object"!=typeof s||Array.isArray(s))throw new Error("An error has happened - The value of a meta information must be an object");o(s),e.meta[t]=s}else delete e.meta[t]})),!await this.commit())throw new Error;this.emit.request("setMeta",[this.body])},delete:async function(){const e=this.config.worksheets[this.worksheet];if(e.meta){if(delete e.meta,!await this.commit())throw new Error;this.emit.request("resetMeta",[])}}};e.exports=a},498:e=>{const t={get:async function(){return{name:await this.db.getSpreadsheetName(this.guid)}},post:async function(){if(4!==this.permissionLevel)throw new Error("Resource restricted to spreadsheet owner");let{data:e}=this.body;e&&"string"==typeof e&&""!==e.trim()||(e="My spreadsheet"),await this.db.update("drive.sheets",{sheet_description:e},{sheet_guid:this.guid}),this.emit.global("title"),this.emit.request(null,[e])}};e.exports=t},99:(e,t,s)=>{const{unsignedInt:r}=s(325),o={},n={title:"string",colspan:"number",tooltip:"string",align:"string"};o.setNestedHeaders=async function(){const e=this.config.worksheets[this.worksheet],t=this.body.data;if(!Array.isArray(t))throw new Error("Invalid format");for(let e=0;e<t.length;e++){const s=t[e];if(!Array.isArray(s))throw new Error("Invalid format");for(let e=0;e<s.length;e++){const t=s[e];if("object"!=typeof t)throw new Error("Invalid format");Object.entries(t).forEach((([e,t])=>{if(!n[e])throw new Error("Invalid property");if("number"===n[e]&&!r.test(t))throw new Error("Invalid property type")}))}}if(e.nestedHeaders=t,!await this.commit())throw new Error;this.emit.request("setNestedHeaders",[t])},o.setNestedCell=async function(){const e=this.config.worksheets[this.worksheet],{x:t,y:s,properties:o}=this.body;if(!t||!s)throw new Error("The position must be informed");if(!r.test(t)||!r.test(s))throw new Error("The position must be an unsigned integer");if(!e.nestedHeaders||!e.nestedHeaders[s]||!e.nestedHeaders[s][t])throw new Error("It is not possible to set the value of a cell that does not exist");if(!o)throw new Error("The properties must be informed");if("object"!=typeof o)throw new Error("The properties must be an object");if(Object.entries(o).forEach((([o,i])=>{if(!n[o])throw new Error("Invalid property");if("number"===n[o]&&!r.test(i))throw new Error("Invalid property type");e.nestedHeaders[s][t][o]=i})),!await this.commit())throw new Error;this.emit.request("setNestedCell",[t,s,o])},o.post=function(){return this.params[1]?o.setNestedCell.call(this):o.setNestedHeaders.call(this)},o.delete=async function(){if(delete this.config.worksheets[this.worksheet].nestedHeaders,!await this.commit())throw new Error;this.emit.request("resetNestedHeaders",[])},e.exports=o},45:(e,t,s)=>{const{updateReferences:r,unsignedInt:o}=s(325),{getColumnNameFromCoords:n,isWithinLimits:i}=s(218),a=s(79),h={post:async function(){const e=this.config.worksheets[this.worksheet];let{order:t}=this.body,s=this.guid;if(e.worksheetId&&(s+="_"+e.worksheetId),t){if(!Array.isArray(t))throw new Error("The order field must be an array of unsigned integers");const e=[];for(let s=0;s<t.length;s++){if("string"!=typeof t[s]||!o.test(t[s]))throw new Error("The order field must be an array of unsigned integers");if(e.includes(t[s]))throw new Error("The order field cannot have repeated elements");e.push(t[s])}}else{let{column:r,direction:n}=this.body;if(!r)throw new Error("The column field is required");if(!o.test(r))throw new Error("The column field must be an unsigned integer");if(!i([parseInt(r)],{numOfColumns:e.minDimensions[0],numOfRows:e.minDimensions[1]}))throw new Error("The column field is out of range");if(n)if("1"===n||"true"===n)n=1;else{if("0"!==n&&"false"!==n)throw new Error("The direction field must be 0, 1 or a boolean");n=0}else n=1;this.body.direction=n,t=await this.db.getDataY(s,r,1===n?"DESC":"ASC")}if(t.every(((e,t)=>e==t)))return;let h=e.minDimensions[0];if(e.minSpareCols>0&&(h+=e.minSpareCols),e.rows){const s=[];t.forEach((t=>{s.push(e.rows[t]||null)})),[...t].sort(((e,t)=>t-e)).forEach((t=>{e.rows.splice(t,1)})),s.push(...e.rows),e.rows=s}e.mergeCells&&a.destroyMerge.call(this),await this.db.setOrder(s,t);const l={};if(t.forEach(((e,t)=>{for(let s=0;s<h;s++){const r=n(s,e),o=n(s,t);r!==o&&(l[r]=o)}})),r.call(this,l),!await this.commit())throw new Error;this.emit.request("orderBy",[this.body.column,this.body.direction,t])}};e.exports=h},574:e=>{const t={get:async function(){return(await this.db.getSuperficialCloudInformationByGuid(this.guid)).sheet_privacy},post:async function(){if(4!==this.permissionLevel)throw new Error("Resource restricted to spreadsheet owner");const e=this.params[1];if("0"!==e&&"1"!==e)throw new Error("The privacy must be 1 or 0");await this.db.update("drive.sheets",{sheet_privacy:parseInt(e)},{sheet_guid:this.guid})}};e.exports=t},680:(e,t,s)=>{const{parseBooleans:r,unsignedInt:o}=s(325),{isWithinLimits:n,getColumnNameFromCoords:i}=s(218),a={},h=/^\d+$/;a.get=function(){const e=this.config.worksheets[this.worksheet];if(this.params[2]){const t=this.params[2];if(!o.test(t))throw new Error("Invalid row position");const s=this.params[1];if(!o.test(s))throw new Error("Invalid column position");const r=i(s,t);return e.cells&&e.cells[r]?e.cells[r]:{}}{let t;if(e.columns||(e.columns=[]),this.params[1])t=this.params[1].split(",");else{t=[];for(let s=0;s<e.minDimensions[0];s++)t.push(s)}const s={};return t.forEach((t=>{e.columns[t]&&Object.keys(e.columns[t]).length>0?s[t]=e.columns[t]:s[t]={type:"text"}})),s}};const l=function(e,t,s,r){const o=i(e,t),a=this.config.worksheets[this.worksheet];if(!n(o,{numOfColumns:a.minDimensions[0],numOfRows:a.minDimensions[1]}))throw new Error("An error has happened - Out of range");a.cells||(a.cells={}),r?s?a.cells[o]=s:delete a.cells[o]:a.cells[o]=Object.assign(a.cells[o]||{},s)},c=function(e,t,s){const r=this.config.worksheets[this.worksheet];if(!n([e],{numOfColumns:r.minDimensions[0],numOfRows:r.minDimensions[1]}))throw new Error("An error has happened - Out of range");for(r.columns||(r.columns=[]);e>=r.columns.length;)r.columns.push({});r.columns[e]=s?t:Object.assign(r.columns[e],t)};a.post=async function(){const{data:e}=this.body;if(!Array.isArray(e))throw new Error("The data property must be an array");if(r(e),e.forEach((e=>{if(!h.test(e.x))throw new Error("An error has happened - Invalid column index");const t=parseInt(e.x);let s;if(e.y){if(!h.test(e.y))throw new Error("An error has happened - Invalid row index");if(s=parseInt(e.y),e.value&&"object"!=typeof e.value)throw new Error("An error has happened - Invalid options");l.call(this,t,s,e.value,"update"!==this.params[1])}else{if("object"!=typeof e.value)throw new Error("An error has happened - Invalid options");c.call(this,t,e.value,"update"!==this.params[1])}})),!await this.commit())throw new Error;this.emit.request("update"===this.params[1]?"updateProperty":"setProperty",[e])},e.exports=a},284:(e,t,s)=>{const{updateReferences:r,copyConfig:o,unsignedInt:n}=s(325),{getColumnNameFromCoords:i,getCoordsFromCellName:a,isWithinLimits:h}=s(218),l=s(79),c={get:async function(){const e=this.params[1];if(!e)throw new Error("Row number not defined");const t=this.config.worksheets[this.worksheet],s=t.minDimensions[0],r=[];for(let e=0;e<s;e++)r.push(e);let o=this.guid;return t.worksheetId&&(o+="_"+t.worksheetId),this.db.getValue(o,r,e.split(","))},moveRow:async function(){const e=this.config.worksheets[this.worksheet];if(e.rows||(e.rows=[]),!this.body.f)throw new Error("The f field is required");if(!n.test(this.body.f))throw new Error("Invalid f field");if(!this.body.t)throw new Error("The t field is required");if(!n.test(this.body.t))throw new Error("Invalid t field");const t=parseInt(this.body.f),s=parseInt(this.body.t);if(t===s)throw new Error("The 'f' and 't' properties must be different");if(!h([,t],{numOfColumns:e.minDimensions[0],numOfRows:e.minDimensions[1]}))throw new Error("The f field is out of range");if(!h([,s],{numOfColumns:e.minDimensions[0],numOfRows:e.minDimensions[1]}))throw new Error("The t field is out of range");if("object"==typeof e.mergeCells){const r=Object.entries(e.mergeCells);for(let e=0;e<r.length;e++){const[o,n]=r[e];let i=a(o)[1],h=i+n[1]-1;if(t>=i&&t<=h){l.destroyMerge.call(this);break}if(t<i&&s>=i&&h--,t>h&&s<=h&&i++,s>=i&&s<=h)throw new Error("The destination row cannot be part of merged cells")}}let c=[],d=[];if(t<s){for(let e=t;e<s;e++)o.call(this,e,e+1,"rows");c=[[`data_y = ${t}`,s],["data_y - 1"]],d=[`data_y >= ${t}`,`data_y <= ${s}`]}else{for(let e=t;e>s;e--)o.call(this,e,e-1,"rows");c=[[`data_y = ${t}`,s],["data_y + 1"]],d=[`data_y >= ${s}`,`data_y <= ${t}`]}let u=this.guid;e.worksheetId&&(u+="_"+e.worksheetId),await this.db.complexRearrange(u,c,d);let f=e.minDimensions[0];e.minSpareCols&&(f+=e.minSpareCols);const m={};if(t<s)for(let e=t+1;e<=s;e++)for(let t=0;t<f;t++){const s=i(t,e),r=i(t,e-1);m[s]=r}else for(let e=s;e<=t-1;e++)for(let t=0;t<f;t++){const s=i(t,e),r=i(t,e+1);m[s]=r}for(let e=0;e<f;e++){const r=i(e,t),o=i(e,s);m[r]=o}if(r.call(this,m),!await this.commit())throw new Error;this.emit.request("moveRow",[t,s])},insertRow:async function(){const e=this.config.worksheets[this.worksheet];if(this.body.rowNumber&&!n.test(this.body.rowNumber))throw new Error("The rowNumber field must be an unsigned integer");let t,s,o=parseInt(this.body.rowNumber);if((!Number.isInteger(o)||o>e.minDimensions[1]-1)&&(o=e.minDimensions[1]-1),this.body.insertBefore)if("false"===this.body.insertBefore||"0"===this.body.insertBefore)t=!1;else{if("true"!==this.body.insertBefore&&"1"!==this.body.insertBefore)throw new Error("The insertBefore field must be 0, 1 or a boolean");t=!0}else t=!1;if(this.body.numOfRows){if(!n.test(this.body.numOfRows))throw new Error("The numOfRows field must be a positive integer");if(s=parseInt(this.body.numOfRows),s<1)throw new Error("The numOfRows field must be a positive integer")}else s=1;let{data:a}=this.body;if(a){if(!Array.isArray(a))throw new Error("The data field must be an array")}else a=[];a.length>s&&(s=a.length);let h=o;t||h++;let l=e.minDimensions[1];e.minSpareRows&&(l+=e.minSpareRows);let c=e.minDimensions[0];e.minSpareCols&&(c+=e.minSpareCols);const d=[];let u=!1;e.columns&&(u=e.columns.some((e=>"data"===e.name)));for(let t=0;t<s;t++){let s;if(a[t]&&a[t].data)if("object"==typeof a[t].data)s=a[t].data;else{if(!u)throw new Error("The data property of a data field item must be an array or object");if(a[t]&&"object"!=typeof a[t])throw new Error("Data field items must be an array or object");s=a[t]||{}}else{if(a[t]&&"object"!=typeof a[t])throw new Error("Data field items must be an array or object");s=a[t]||{}}const r=[];for(let t=0;t<c;t++)if(s[t]?r.push(s[t]):e.columns&&e.columns[t]&&e.columns[t].name&&s[e.columns[t].name]?r.push(s[e.columns[t].name]):r.push(""),"string"!=typeof r[r.length-1])throw new Error("The content of a cell must be a string or a number");d.push({row:h++,data:r})}let f=this.guid;if(e.worksheetId&&(f+="_"+e.worksheetId),o<=e.minDimensions[1]-1){h=o,t||h++;const n={};for(let e=h;e<l;e++)for(let t=0;t<c;t++){const r=i(t,e),o=i(t,e+s);n[r]=o}if(e.rows){const t=[];for(let r=0;r<l;r++)if(e.rows[r]){let o=r;for(r>=h&&(o+=s);t.length<=o;)t.push({});t[o]=e.rows[r]}Object.keys(t).length&&(e.rows=t)}Object.keys(n).length&&r.call(this,n),await this.db.rearrange(f,s,h,">=","+")}if(await Promise.all(d.map((async e=>{const t={data_y:e.row,data_status:1};return e.data&&await Promise.all(e.data.map((async(e,s)=>{let r=e;if(e.startsWith("data:image/png")||e.startsWith("data:image/jpeg")||e.startsWith("data:image/jpg")||e.startsWith("data:image/gif"))try{r=await s3Abstraction.setImage(e,this.guid)}catch(e){throw new Error("An error has happen - It was not possible to upload the image")}t[`data_x[${s}]`]=r}))),this.db.upsert(f,t)}))),e.minDimensions[1]+=s,!await this.commit())throw new Error;const m=[s,o,t?1:0,d.map((e=>e.data))];return this.emit.request("insertRow",m),m},deleteRow:async function(){if(!this.body.rowNumber)throw new Error("The rowNumber field is required");if(!n.test(this.body.rowNumber))throw new Error("The rowNumber field must be an unsigned integer");const e=parseInt(this.body.rowNumber);let t;if(this.body.numOfRows){if(!n.test(this.body.numOfRows))throw new Error("The numOfRows field must be a positive integer");if(t=parseInt(this.body.numOfRows),t<1)throw new Error("The numOfRows field must be a positive integer")}else t=1;const s=this.config.worksheets[this.worksheet];if(t+e>s.minDimensions[1])throw new Error("Cannot delete rows that do not exist");let o=s.minDimensions[1];s.minSpareRows&&(o+=s.minSpareRows);let a=s.minDimensions[0];s.minSpareCols&&(a+=s.minSpareCols);const h={};for(let s=e+t;s<o;s++)for(let e=0;e<a;e++){const r=i(e,s),o=i(e,s-t);h[r]=o}const l=[];for(let s=e;s<e+t;s++)for(let e=0;e<a;e++)l.push(i(e,s));r.call(this,h,l),s.rows&&s.rows.splice(e,t);let c=this.guid;if(s.worksheetId&&(c+="_"+s.worksheetId),await this.db.deleteRows(c,t,e),s.minDimensions&&s.minDimensions[1]&&(s.minDimensions[1]-=t),!await this.commit())throw new Error;this.emit.request("deleteRow",{rowNumber:e,numOfRows:t})},post:function(){return"move"===this.params[1]?c.moveRow.call(this):"delete"===this.params[1]?c.deleteRow.call(this):c.insertRow.call(this)}};e.exports=c},916:(e,t,s)=>{const{unsignedInt:r,parseBooleans:o}=s(325),n=s(446),i={create:async function(e,{guid:t,description:s}){if(s&&"string"!=typeof s)throw new Error("The description field must be a string");const i=t||n.v4();let a;const h=typeof e;if(e)if("string"===h){try{a=JSON.parse(e)}catch(e){throw new Error("The config must be a valid json")}if("object"!=typeof a||Array.isArray(a))throw new Error("The config json must represent an object")}else{if("object"!==h||Array.isArray(e))throw new Error("Config must be an object or json");a=e}else a={};a.worksheets||(a={worksheets:[a]});const l=[];for(let e=0;e<a.worksheets.length;e++){if("string"==typeof a.worksheets[e])try{a.worksheets[e]=JSON.parse(a.worksheets[e])}catch(e){throw new Error("Worksheets in json format must be valid jsons")}if("object"!=typeof a.worksheets[e]||Array.isArray(a.worksheets[e]))throw new Error("The worksheets must be objects or json objects");const t=a.worksheets[e];if(t.minDimensions){if("object"!=typeof t.minDimensions||!Array.isArray(t.minDimensions))throw new Error("The minDimensions property of the worksheets must be an array");if(t.minDimensions.length>2)throw new Error("The minDimensions property of worksheets must have a maximum length of 2");t.minDimensions=t.minDimensions.map((e=>{if(null!=e&&!r.test(e))throw new Error("The minDimensions property of worksheets must consist of unsigned integers");return parseInt(e)}))}else t.minDimensions=[1,1];if(Array.isArray(t.columns)&&(!t.minDimensions[0]||t.minDimensions[0]<t.columns.length)&&(t.minDimensions[0]=t.columns.length),Array.isArray(t.data)&&(!t.minDimensions[1]||t.minDimensions[1]<t.data.length)&&(t.minDimensions[1]=t.data.length),t.worksheetName){if("string"!=typeof t.worksheetName)throw new Error("The worksheetName property of worksheets must be a string")}else t.worksheetName="Sheet"+(e+1);if(t.worksheetId){if("string"!=typeof t.worksheetId)throw new Error("The worksheetId property of worksheets must be a string")}else e>0&&(t.worksheetId=n.v4().slice(0,8));if(t.data){if(!Array.isArray(t.data))throw new Error("The worksheets data must be an array");let e=Array.isArray(t.columns)&&t.columns.length||0;const s=[];t.data.forEach((r=>{if(r.id){const o="object"==typeof r.data?r.data:r;Object.keys(o).length>e&&(e=Object.keys(o).length),s.push([]);for(let r=0;r<e;r++){const e=Array.isArray(t.columns)&&t.columns[r]&&t.columns[r].name||r;s[s.length-1].push(o[e])}}else s.push(r)})),l.push(s),delete t.data}}return o(a),t?await this.db.update("drive.sheets",{sheet_config:JSON.stringify(a)},{sheet_guid:i}):await this.db.insert("drive.sheets",{user_id:this.userId,sheet_guid:i,sheet_privacy:1,sheet_status:1,sheet_description:s||"",sheet_config:JSON.stringify(a)}),await Promise.all(a.worksheets.map(((e,t)=>{const s=e.worksheetId,r=l[t];return this.db.createTable(i,s,r)}))),i},post:async function(){return i.create.call(this,this.body.config,{description:this.body.description})},delete:async function(){if(4!==this.permissionLevel)throw new Error("Resource restricted to spreadsheet owner");await this.db.deleteSpreadsheet(this.guid),this.emit.global("delete")}};e.exports=i},130:(e,t,s)=>{const{isWithinLimits:r,isValidCellName:o}=s(218),n=s(325),i={get:function(){const e=this.config.worksheets[this.worksheet];if(!e.style||0===Object.keys(e.style))return{};const t=this.params[1];if(!t)return e.style;const s=n.getRequestedCells(t),r={};return s.forEach((t=>{r[t]=e.style[t]})),r},post:async function(){const e=this.body,t=this.config.worksheets[this.worksheet];if(!e||0===Object.keys(e).length)throw new Error("An error has happened - Styles must be informed");const s={};t.style&&Object.entries(t.style).forEach((([e,t])=>{s[e]={},t.split(";").forEach((t=>{const[r,o]=t.split(":");o&&(s[e][r.trim()]=o.trim())}))})),Object.entries(e).forEach((([e,n])=>{if(!o(e))throw new Error("An error has happened - Invalid cell name");if(!r(e,{numOfColumns:t.minDimensions[0],numOfRows:t.minDimensions[1]}))throw new Error("An error has happened - Out of range");if("string"!=typeof n)throw new Error("An error has happened - The css must be a string");s[e]||(s[e]={}),n.split(";").forEach((t=>{if(!t)return;let[r,o]=t.split(":");o=o.trim(),o?s[e][r.trim()]=o:delete s[e][r.trim()]}))}));const n={};if(Object.entries(s).forEach((([e,t])=>{let s=[];Object.entries(t).forEach((([e,t])=>{s.push(e+":"+t)})),s.length>0&&(n[e]=s.join(";"))})),t.style=n,!await this.commit(this.config))throw new Error;this.emit.request("setStyle",[e,null,null,!0])},delete:async function(){const e=this.params[1];if("string"!=typeof e||""===e.trim())throw new Error("No cell defined");const t=this.config.worksheets[this.worksheet];if(t.style&&Object.keys(t.style).length>0){const s=n.getRequestedCells(e);if(s.forEach((e=>{if(!o(e))throw new Error("An error has happened - Invalid cell name");if(!r(e,{numOfColumns:t.minDimensions[0],numOfRows:t.minDimensions[1]}))throw new Error("An error has happened - Out of range");delete t.style[e]})),!await this.commit(this.config))throw new Error;this.emit.request("resetStyle",[s])}}};e.exports=i},64:(e,t,s)=>{const r=s(25),o={smallTokenToCompleteToken:async function(e,t){const s=await this.db.getSheetIdWithSmallToken(e,t);if(!s)throw new Error("This invitation is not valid");return{token:r.sign({sheet_id:s,small_token:t},process.env.BOSSANOVA_JWT_SECRET,{algorithm:"HS512"})}}};e.exports=o},413:(e,t,s)=>{const r=s(446),{unsignedInt:o}=s(325),n={},i=["Viewer","Editor","Designer"];n.get=async function(){if(4!==this.permissionLevel)throw new Error("Resource restricted to spreadsheet owner");return(await this.db.getUsers(this.guid)).map((e=>({name:e.sheet_user_email,email:e.sheet_user_email,title:i[e.sheet_user_level],level:e.sheet_user_level,token:e.sheet_user_token})))},n.setUsers=async function(){let{data:e}=this.body;if(!e)throw new Error("The data field is required");if(!Array.isArray(e))throw new Error("The data field must be an array");return e.forEach((e=>{if("object"!=typeof e)throw new Error("Data field items must be objects");const{email:t,level:s}=e;if(!t||!s)throw new Error("Each item in the data field must have email and level properties");if("string"!=typeof t)throw new Error("The email items must be strings");if(!o.test(s))throw new Error("The level items must be unsigned integers")})),{users:await Promise.all(e.map((async e=>{const t=r.v4().slice(0,8),s={sheet_id:this.cloud.sheet_id,sheet_guid:this.guid,sheet_user_email:e.email.toLocaleLowerCase(),sheet_user_level:e.level,sheet_user_status:2,sheet_user_token:t};return await this.db.addUser(s).catch((e=>{throw new Error("Sorry, something went wrong. You cannot invite the same users twice.")})),{email:s.sheet_user_email,token:s.sheet_user_token}})))}},n.updateUsers=async function(){const{data:e}=this.body;if(!e)throw new Error("The data field is required");if(!Array.isArray(e))throw new Error("The data field must be an array");e.forEach((e=>{if(!Array.isArray(e))throw new Error("Data field items must be arrays");if(2!==e.length)throw new Error("Each item in the data field must consist of an email and a level");if("string"!=typeof e[0])throw new Error("The email items must be strings");if(!o.test(e[1]))throw new Error("The level items must be unsigned integers")}));try{await Promise.all(e.map((e=>this.db.updateUser(this.cloud.sheet_id,e[0],e[1]))))}catch(e){throw new Error("Sorry, something went wrong")}},n.deleteUsers=async function(){let{data:e}=this.body;if(!e)throw new Error("The data field is required");Array.isArray(e)||(e=[e]),e.forEach((e=>{if("string"!=typeof e)throw new Error("The data field must be a string or an array of strings")}));try{return await Promise.all(e.map((async e=>{this.db.deleteUser(this.cloud.sheet_id,e)}))),{message:"Successfully deleted"}}catch(e){throw new Error("Sorry, something went wrong.")}},n.post=function(){if(4!==this.permissionLevel)throw new Error("Resource restricted to spreadsheet owner");return"delete"===this.params[1]?n.deleteUsers.call(this):"update"===this.params[1]?n.updateUsers.call(this):n.setUsers.call(this)},e.exports=n},897:e=>{const t={},s=/^\d+$/;t.get=function(){return this.config&&this.config.validations?this.config.validations:[]};const r=["type","criteria","value","action","text","allowBlank","format","range"],o={number:["between","not between","<","<=",">",">=","=","!="],textLength:["between","not between","<","<=",">",">=","=","!="],text:["contains","not contains","begins with","ends with","=","valid email","valid url"],date:["valid date","between","not between","<","<=",">",">=","=","!="],list:[],exist:[],"not exist":[]},n={"<":1,"<=":1,">":1,">=":1,"=":1,"!=":1,between:2,"not between":2,contains:1,"not contains":1,"valid date":0,"valid email":0,"valid url":0,"begins with":1,"ends with":1},i=["warning","reject","format"],a=Object.keys(o);t.post=async function(){const{data:e}=this.body;if(this.config.validations||(this.config.validations=[]),!e)throw new Error("The data field is required");if(!Array.isArray(e))throw new Error("The data field must be an array");if(e.forEach((e=>{if("object"!=typeof e)throw new Error("The items of the array must be objects");const{index:t,value:h}=e;if(!t)throw new Error("The validation index is required");if("string"!=typeof t||!s.test(t))throw new Error("The validation index must be an unsigned integer");if(h){if(!h.action)throw new Error("The validation action is required");if(!i.includes(h.action))throw new Error("Invalid validation action");if(!h.type)throw new Error("The validation type is required");if(!a.includes(h.type))throw new Error("Invalid validation type");if(!h.range)throw new Error("The validation range is required");if(0===o[h.type].length)delete h.criteria;else if(!o[h.type].includes(h.criteria))throw new Error(`Type "${h.type}" does not support "${h.criteria}" criteria`);if(h.criteria)if(0===n[h.criteria])delete h.value;else{if(!Array.isArray(h.value))throw new Error("When validation requires values, they must be in an array");if(h.value.length<n[h.criteria])throw new Error(`Validations with type "${h.type}" and criteria "${h.criteria}" must have a value with lenght ${n[h.criteria]}`);h.value.splice(n[h.criteria])}else if("list"===h.type){if(!Array.isArray(h.value))throw new Error("list validation needs first value");h.value.splice(1)}else delete h.value;if("reject"===h.action?delete h.allowBlank:"format"===h.action&&delete h.text,h.allowBlank)if("true"===h.allowBlank||"1"===h.allowBlank)h.allowBlank=!0;else{if("false"!==h.allowBlank&&"0"!==h.allowBlank)throw new Error("The allowBlank field, if sent, must be 0, 1 or a boolean");delete h.allowBlank}Object.keys(h).filter((e=>!r.includes(e))).forEach((e=>{delete h[e]})),this.config.validations[t]=h}else this.config.validations[t]=null})),!await this.commit())throw new Error;this.emit.request("setValidations",[this.body.data])},e.exports=t},794:(e,t,s)=>{const{getRequestedCells:r,unsignedInt:o}=s(325),{getCoordsFromCellName:n}=s(218),i=s(205),a={get:async function(){if(!this.params[1])throw new Error("An error has happened - It is necessary to inform the desired cells");const e=r(this.params[1]),t=this.config.worksheets[this.worksheet];let s=this.guid;return t.worksheetId&&(s+="_"+t.worksheetId),await Promise.all(e.map((async e=>{const t=n(e);return{x:t[0],y:t[1],name:e,value:await this.db.getValueFromCoords(s,t[0],t[1])}})))},updateData:async function(e){const t=[],s=this.config.worksheets[this.worksheet];let r=this.guid;s.worksheetId&&(r+="_"+s.worksheetId);try{await Promise.all(Object.values(e).map((async e=>{const s={data_y:e.row,data_status:1};if(e.data)try{await Promise.all(Object.entries(e.data).map((async([r,o])=>{(o.startsWith("data:image/png")||o.startsWith("data:image/jpeg")||o.startsWith("data:image/jpg")||o.startsWith("data:image/gif"))&&(o=await i.setImage(o,this.guid),t.push({x:r,y:e.row,value:o})),s[`data_x[${r}]`]=o})))}catch(e){throw new Error("An error has happen - It was not possible to upload the image")}return this.db.upsert(r,s)})))}catch(e){throw new Error("An error has happen")}return await this.db.setDate(this.guid),t},post:async function(){let{data:e}=this.body;if(!e)throw new Error("The data field is required");if(!Array.isArray(e))throw new Error("The data field must be an array");e=e.filter((e=>!!e));const t=this.config.worksheets[this.worksheet],s={};e.forEach((e=>{if(!e.x||!e.y)throw new Error("Each item in the data field must have x and y properties");if(!o.test(e.x)||!o.test(e.y))throw new Error("The x and y properties must be unsigned integers");if("string"!=typeof e.value)throw new Error("The value properties must be strings");if(s[e.y]||(s[e.y]={row:e.y,data:{}}),e.y>=t.minDimensions[1]||e.x>=t.minDimensions[0])throw new Error("Unable to set cell value outside worksheet boundaries");s[e.y].data[e.x]=e.value}));const r=await a.updateData.call(this,s);if(this.emit.request("setValue",[e]),r)return r}};e.exports=a},883:(e,t,s)=>{const{unsignedInt:r}=s(325),{isWithinLimits:o}=s(218),n={get:function(){const e=this.config.worksheets[this.worksheet];e.columns||(e.columns=[]);let t=[];if(this.params[1])t=this.params[1].split(",");else{const s=e.minDimensions[0];for(let e=0;e<s;e++)t.push(e)}const s={};return t.forEach((t=>{e.columns[t]&&e.columns[t].width?s[t]=parseInt(e.columns[t].width):e.defaultColWidth?s[t]=parseInt(e.defaultColWidth):s[t]=100})),s},post:async function(){let{width:e,column:t}=this.body;if(!e||!t)throw new Error("The column and width must be informed");const s=this.config.worksheets[this.worksheet];if(s.columns||(s.columns=[]),Array.isArray(t))t.forEach(((t,n)=>{if(t=parseInt(t),!Number.isInteger(t))throw new Error("Invalid column");if(!o([t],{numOfColumns:s.minDimensions[0],numOfRows:s.minDimensions[1]}))throw new Error("An error has happened - Out of range");let i=Array.isArray(e)?e[n]:e;if(!r.test(i))throw new Error("the width must be an unsigned integer");for(i=parseInt(i);t>=s.columns.length;)s.columns.push({});s.columns[t].width=i}));else{if(t=parseInt(t),!Number.isInteger(t))throw new Error("Invalid column");if(!o([t],{numOfColumns:s.minDimensions[0],numOfRows:s.minDimensions[1]}))throw new Error("An error has happened - Out of range");if(Array.isArray(e))throw new Error("The width can only be an array when the column is also");if(!r.test(e))throw new Error("the width must be an unsigned integer");for(e=parseInt(e);t>=s.columns.length;)s.columns.push({});s.columns[t].width=e}if(!await this.commit())throw new Error;this.emit.request("setWidth",this.body)}};e.exports=n},963:(e,t,s)=>{const r=s(446),{unsignedInt:o,parseBooleans:n}=s(325),i={createWorksheet:async function(){let e,t=this.body;if(t){if("object"!=typeof t)throw new Error("The config field must be an object")}else t={};if(t.minDimensions){if(!Array.isArray(t.minDimensions)||2!==t.minDimensions.length)throw new Error("The minDimensions property must be an array of length 2");t.minDimensions=t.minDimensions.map((e=>{if(!o.test(e))throw new Error("The minDimensions property must consist of unsigned integers");return parseInt(e)}))}else t.minDimensions=[8,10];if(t.worksheetId){if("string"!=typeof t.worksheetId)throw new Error("The worksheetId property must be a string")}else t.worksheetId=r.v4().slice(0,8);if(delete t.cloud,delete t.license,t.data&&(e=t.data,delete t.data,!Array.isArray(e)))throw new Error("The data property must be an array");if(n(t),this.config.worksheets.push(t),await this.db.createTable(this.guid.replace(/-/g,""),t.worksheetId,e).catch((()=>{throw new Error("It was not possible to create the worksheet")})),!await this.commit())throw new Error;return this.emit.request("createWorksheet",[{...t,data:e},!1]),{message:"Successfully created",worksheet:this.config.worksheets.length,worksheetId:t.worksheetId}},moveWorksheet:async function(){if(!this.body.f)throw new Error("The f field is required");if(!this.body.t)throw new Error("The t field is required");if(!o.test(this.body.f))throw new Error("Invalid value for 'from' parameter");if(!o.test(this.body.t))throw new Error("Invalid value for 'to' parameter");const e=parseInt(this.body.f),t=parseInt(this.body.t);if(e===t)return;if(e>=this.config.worksheets.length)throw new Error("There is no worksheet in this index");const s=this.config.worksheets.splice(e,1)[0];if(this.config.worksheets.splice(t,0,s),!await this.commit())throw new Error;this.emit.request("moveWorksheet",this.body)},renameWorksheet:async function(){let e;if(this.body.newValue?e=this.body.newValue:this.body.name&&(e=this.body.name),e&&(e=e.replace(/[^0-9A-Za-z_\s^]+/gi,"")),!e)throw new Error("The worksheet name is required");if("string"!=typeof e)throw new Error("The worksheet name must be a string");if(!this.body.worksheet)throw new Error("The worksheet field is required");if(!o.test(this.body.worksheet))throw new Error("Invalid worksheet index");const t=parseInt(this.body.worksheet);if(t>=this.config.worksheets.length)throw new Error("Invalid worksheet index");if(this.config.worksheets.forEach(((s,r)=>{if(s.worksheetName===e&&t!==r)throw new Error("Two spreadsheets cannot have the same name")})),this.config.worksheets[t].worksheetName=e,!await this.commit())throw new Error;this.emit.request("renameWorksheet",this.body)},post:async function(){return"rename"===this.params[1]?i.renameWorksheet.call(this):"move"===this.params[1]?i.moveWorksheet.call(this):i.createWorksheet.call(this)},delete:async function(){if(!this.params[1])throw new Error("Worksheet index is required");if(!o.test(this.params[1]))throw new Error("Invalid worksheet index");const e=parseInt(this.params[1]);if(e>=this.config.worksheets.length)throw new Error("Invalid worksheet index");const t=this.config.worksheets.splice(e,1)[0];let s="sheets.data_"+this.guid.replace(/-/g,"");if(t.worksheetId&&(s+="_"+t.worksheetId),await this.db.dropTable(s),!await this.commit())throw new Error;this.emit.request("deleteWorksheet",[e])}};e.exports=i},325:(e,t,s)=>{const{getCoordsFromCellName:r,getColumnNameFromCoords:o,isValidCellName:n}=s(218),i=s(218),a={getRequestedCells:e=>{const t=[];return e.split(",").forEach((e=>{const s=e.split(":");if(s.length>2)throw new Error("Invalid interval");if(1===s.length)t.push(s[0]);else{const e=i.getCoordsFromCellName(s[0]),r=i.getCoordsFromCellName(s[1]);for(let s=e[1];s<=r[1];s++)for(let o=e[0];o<=r[0];o++)t.push(i.getColumnNameFromCoords(o,s))}})),t.forEach((e=>{if(!n(e))throw new Error("An error has happened - Invalid cell name")})),t},getColumnName:e=>{let t="";return e>701?(t+=String.fromCharCode(64+e/676),t+=String.fromCharCode(64+e%676/26)):e>25&&(t+=String.fromCharCode(64+e/26)),t+=String.fromCharCode(65+e%26),t},copyConfig:function(e,t,s){const r=this.config.worksheets[this.worksheet];if(!r[s])return;if(Array.isArray(r[s]))for(;r[s].length<=e||r[s].length<=t;)r[s].push({});const o=r[s][e];r[s][e]=r[s][t],r[s][t]=o},copyFooters:function(e,t){const s=this.config.worksheets[this.worksheet];s.footers&&(s.footers=s.footers.map((s=>{for(;e>=s.length||t>=s.length;)s.push(null);const r=s.splice(e,1)[0];return s.splice(t,0,r),s})))},getRangeFromTokens:e=>{const t=[...e].sort(((e,t)=>{const s=r(e),o=r(t);return s[1]!==o[1]?s[1]-o[1]:s[0]-o[0]}));return t[0]+":"+t[t.length-1]},updateK:function(e,t,s){const r=this.config.worksheets[this.worksheet];if(r&&r[e]){const o={};Object.entries(r[e]).forEach((([e,r])=>{if(!s||!s[e]){let s;s=t[e]?t[e]:e,o[s]=r}})),r[e]=o,Object.keys(r[e]).length||delete r[e]}},updateMerge:function(e,t){const s=this.config.worksheets[this.worksheet];s&&s.mergeCells&&Object.entries(s.mergeCells).forEach((([n,i])=>{const h=r(n),l=o(h[0]+i[0]-1,h[1]+i[1]-1),c=a.getRequestedCells(n+":"+l),d=[];if(c.forEach((s=>{t&&t.includes(s)||(e[s]?d.push(e[s]):d.push(s))})),d.length){const e=a.getRangeFromTokens(d),[t,o]=e.split(":"),i=[r(t),r(o)],h=[i[1][0]-i[0][0]+1,i[1][1]-i[0][1]+1];n!==t&&delete s.mergeCells[n],s.mergeCells[t]=h}else delete s.mergeCells[n]}))}},h=function(e){this.config.worksheets[this.worksheet].nestedHeaders.forEach((t=>{let s,r=0,o=e[0]+e[1]-1;for(let e=0;e<t.length;e++){const n=t[e],i=r+parseInt(n.colspan)-1;if(o>=r&&o<=i){s=e;break}r=i+1}if(Number.isInteger(s)){let o=e[1];for(;o>0;){let n=e[0]+o-r;n>o&&(n=o),t[s].colspan=parseInt(t[s].colspan)-n,0===t[s].colspan?t.splice(s,1):t[s].colspan=t[s].colspan.toString(),o-=n,s--,r>0&&(r-=parseInt(t[s].colspan))}}}))},l=function(e){this.config.worksheets[this.worksheet].nestedHeaders.forEach((t=>{let s=0;for(let r=0;r<t.length;r++){const o=t[r],n=s+parseInt(o.colspan)-1;if(e[0]>=s&&e[0]<=n){o.colspan=parseInt(o.colspan)+e[1],o.colspan=o.colspan.toString();break}s=n+1}}))};a.updateNestedHeaders=function(e,t){const s=this.config.worksheets[this.worksheet];s&&s.nestedHeaders&&(t&&h.call(this,t),e&&l.call(this,e))},a.updateReferences=function(e,t){a.updateK.call(this,"style",e,t),a.updateK.call(this,"cells",e,t),a.updateK.call(this,"meta",e,t),a.updateK.call(this,"comments",e,t),a.updateMerge.call(this,e,t)},a.unsignedInt=/^\d+$/,a.parseBooleans=e=>{"object"==typeof e&&e&&Object.keys(e).forEach((t=>{"true"===e[t]?e[t]=!0:"false"===e[t]?e[t]=!1:a.parseBooleans(e[t])}))},a.compareObjs=(e,t)=>{if("object"!=typeof e||"object"!=typeof t)return e===t;if(null===e||null===t)return e===t;const s=Object.keys(e),r=Object.keys(t);if(s.length!==r.length)return!1;s.sort(),r.sort();for(let e=0;e<s.length;e++)if(s[e]!==r[e])return!1;return s.every((s=>a.compareObjs(e[s],t[s])))},e.exports=a},68:(e,t,s)=>{const r=s(25);e.exports={isValid:e=>r.verify(e,process.env.BOSSANOVA_JWT_SECRET),getToken:e=>{var t=e.match(/bossanova=(.*);?/);return!(!t||!t[1])&&(t=t[1].split(";"))[0]}}},14:e=>{e.exports={genericResponse:(e,t,s)=>e?{success:1,message:t||"Updated",data:s}:{error:1,message:t||"An error has happened"},isAjax:function(e){return!(!e.headers["content-type"]||-1===e.headers["content-type"].indexOf("json"))||!(!e.headers["x-requested-with"]||-1===e.headers["x-requested-with"].indexOf("XMLHttpRequest"))}}},205:(e,t,s)=>{const r=s(134),o=s(446),n={s3:new r.S3({region:process.env.AWS_S3_REGION,apiVersion:"latest",credentials:{accessKeyId:process.env.AWS_S3_KEY,secretAccessKey:process.env.AWS_S3_SECRET}}),get:async function(e){return(await this.s3.getObject({Bucket:"jexcel",Key:e}).promise()).Body},getByPrefix:async function(e){return(await this.s3.listObjectsV2({Bucket:"jexcel",Prefix:e}).promise()).Contents},save:async function(e,t){await this.s3.upload({Bucket:"jexcel",Key:e,Body:t}).promise()}},i=/^data:image\/(\w+);base64,/;n.setImage=async function(e,t){const s=e.match(i);if(!s)throw new Error("did not match data URI with image data");const r=e.slice(e.indexOf(",")+1),n=s[1].toLocaleLowerCase();if(!["jpg","jpeg","gif","png"].some((e=>e===n)))throw new Error("invalid image type");let a=new Buffer.from(r,"base64");const h=t+"/"+o.v4().slice(0,8)+"."+n;return await this.save(h,a),"/media/"+h},n.delete=async function(e){return this.s3.deleteObject({Bucket:"jexcel",Key:e}).promise()},e.exports=n},218:e=>{const t={getCoordsFromCellName:e=>{const t=e.match(/^[A-Z]+/)[0],s=e.slice(t.length);let r=0;for(let e=0;e<t.length;e++)r+=(t.charCodeAt(e)-64)*Math.pow(26,t.length-e-1);r--;let o=parseInt(s)-1;return Number.isNaN(o)&&(o=void 0),[r,o]},getColumnNameFromCoords:(e,t)=>(e=>{let t="";return e>701?(t+=String.fromCharCode(64+parseInt(e/676)),t+=String.fromCharCode(64+parseInt(e%676/26))):e>25&&(t+=String.fromCharCode(64+parseInt(e/26))),t+=String.fromCharCode(65+e%26),t})(parseInt(e))+(parseInt(t)+1),isValidCellName:e=>/^[A-Z]+[1-9][0-9]*$/.test(e),isWithinLimits:(e,{numOfColumns:s,numOfRows:r,colspan:o,rowspan:n})=>{if(!s||!r)throw new Error("numOfColumns and numOfRows are required");"string"==typeof e&&(e=t.getCoordsFromCellName(e));let[i,a]=e;if(i<0)return!1;if("number"==typeof o&&(i+=o-1),i>=s)return!1;if("number"==typeof a){if(a<0)return!1;if("number"==typeof n&&(a+=n-1),a>=r)return!1}return!0}};e.exports=t},685:e=>{"use strict";e.exports=require("http")},796:e=>{"use strict";e.exports=require("zlib")},134:e=>{"use strict";e.exports=require("aws-sdk")},971:e=>{"use strict";e.exports=require("cors")},89:e=>{"use strict";e.exports=require("dotenv")},566:e=>{"use strict";e.exports=require("express")},85:e=>{"use strict";e.exports=require("js-sha512")},25:e=>{"use strict";e.exports=require("jsonwebtoken")},429:e=>{"use strict";e.exports=require("multer")},77:e=>{"use strict";e.exports=require("pg")},389:e=>{"use strict";e.exports=require("socket.io")},446:e=>{"use strict";e.exports=require("uuid")}},t={};function s(r){var o=t[r];if(void 0!==o)return o.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,s),n.exports}(()=>{const e=s(685),t=s(566),r=s(971),o=s(446);s(89).config({path:".env"});const n=s(203),{mainRouter:i}=s(124),{hasPermission:a,getInfoFromJwt:h}=s(860),l=t();l.use(r());const c=e.createServer(l);c.listen(process.env.JSS_SERVER_PORT||3e3);const d=s(389)(c,{cors:{origin:"*"}});l.use(i(d)),d.use((async(e,t)=>{if(!e.handshake.query.room)return t(new Error("Invalid room"));const s=new n;try{let r;await s.establishConnection();try{r=h(e.handshake.query.token)}catch(e){return t(new Error("Unauthorized"))}const[o]=e.handshake.query.room.split(",");if(36!==o.length)return t(new Error("Invalid spreadsheet guid"));const n=await s.getCloudByGuid(o);if(!n||r.sheet_id&&r.sheet_id!==n.sheet_id)return t(new Error("Invalid spreadsheet"));let i;if(r.small_token){if(r.sheet_id)return t(new Error("Invalid auth token"));i=await s.getLevelWithSmallToken(r.sheet_id,r.small_token)}else{if(!r.user_id||!r.user_signature||!await s.tokenIsValid(r.user_id,r.user_signature))return t(new Error("Invalid auth token"));i=await a(n,r.user_id,s)}if(i<0)return t(new Error("Unauthorized"))}catch(e){return t(new Error("Something went wrong"))}finally{s.closeConnection()}return t()})),d.on("connection",(async function(e){var t=o.v4();e.join(e.handshake.query.room),e.on("JSS",(function(s){e.broadcast.to(e.handshake.query.room).emit("JSS",{...s,user:t})})),e.on("disconnect",(function(){e.broadcast.to(e.handshake.query.room).emit("JSS",{user:t,method:"resetBorders"})}))}))})()})();